// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Summarizes medical text or documents to extract key information.
 *
 * - summarizeMedicalText - A function that summarizes medical text.
 * - SummarizeMedicalTextInput - The input type for the summarizeMedicalText function.
 * - SummarizeMedicalTextOutput - The return type for the summarizeMedicalText function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SummarizeMedicalTextInputSchema = z.object({
  medicalText: z
    .string()
    .describe('Medical text or document content to be summarized.'),
});

export type SummarizeMedicalTextInput = z.infer<
  typeof SummarizeMedicalTextInputSchema
>;

const SummarizeMedicalTextOutputSchema = z.object({
  summary: z.string().describe('A concise summary of the medical text.'),
});

export type SummarizeMedicalTextOutput = z.infer<
  typeof SummarizeMedicalTextOutputSchema
>;

export async function summarizeMedicalText(
  input: SummarizeMedicalTextInput
): Promise<SummarizeMedicalTextOutput> {
  return summarizeMedicalTextFlow(input);
}

const summarizeMedicalTextPrompt = ai.definePrompt({
  name: 'summarizeMedicalTextPrompt',
  input: {schema: SummarizeMedicalTextInputSchema},
  output: {schema: SummarizeMedicalTextOutputSchema},
  prompt: `Summarize the following medical text, extracting the key points and relevant information:\n\n{{{medicalText}}}`,
});

const summarizeMedicalTextFlow = ai.defineFlow(
  {
    name: 'summarizeMedicalTextFlow',
    inputSchema: SummarizeMedicalTextInputSchema,
    outputSchema: SummarizeMedicalTextOutputSchema,
  },
  async input => {
    const {output} = await summarizeMedicalTextPrompt(input);
    return output!;
  }
);
